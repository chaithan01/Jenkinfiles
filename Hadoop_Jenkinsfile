docker.image('base:v1').inside("-v /var/lib/jenkins/.m2/repository:/var/lib/jenkins/.m2/repository:rw,z") {
    environment {
    //    FINDBUGS_HOME=/opt/findbugs
        //MAVEN_OPTS=-Xmx4g -Xms128m
        //PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/local/hadoop/bin:/usr/local/hadoop/sbin:/var/lib/jenkins/phantomjs-1/bin
        //MAVEN_OPTS          =   '-Xmx2g -XX:ReservedCodeCacheSize=512m -XX:PermSize=1024m -XX:MaxPermSize=1024m'
        //JAVA_TOOL_OPTIONS   =   '-Dos.arch=ppc64le'
    }
    stage('Preparation') {
        // Get some code from a GitHub repository
        git branch: 'trunk', url: 'https://github.com/apache/hadoop.git'
    }
    stage('Compile') {
        // Run the maven build without test
        sh "/opt/maven/bin/mvn clean install -fn -Ptest-patch -Pparallel-tests -Pshelltest -Pdist,native -Drequire.libwebhdfs -Drequire.snappy -Drequire.openssl -Drequire.fuse -Drequire.test.libhadoop -Pyarn-ui -DskipTests"
    }
    stage('Test') {
        // Run the maven build with test
        sh "/opt/maven/bin/mvn test -fn -Ptest-patch -Pparallel-tests -Pshelltest -Pdist,native -Drequire.libwebhdfs -Drequire.snappy -Drequire.openssl -Drequire.fuse -Drequire.test.libhadoop -Pyarn-ui"
    }
    post {
    always {
        junit '**/target/surefire-reports/TEST-*.xml'
        archive '**/target/*.jar'
    }
    }
}
